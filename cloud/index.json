[
{
	"uri": "https://developers.devision.io/cloud/guides/",
	"title": "Руководство",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://developers.devision.io/cloud/guides/get_started/",
	"title": "С чего начать",
	"tags": [],
	"description": "",
	"content": " 1. Зарегистрируйте проект Войдите под своей учетной записью в https://console-cloud.devision.io/ и добавьте новый проект.\nИдентификатор проекта глобально уникальный и его нельзя изменить после создания.\n2. Добавьте OAuth клиента Перейдите в карточку проекта, зайдите на страницу \u0026ldquo;Клиенты OAuth\u0026rdquo; и добавьте нового oauth клиента.\nКак и в любых других oauth системах авторизации вы должны будете заполнить \u0026ldquo;Разрешенные URI перенаправления\u0026rdquo;.\nПосле успешного добавления вы получаете идентификатор и секрет клиента, с ними вы можете проходить процедура oauth авторизации.\n3. Получение токена Получение токена в обмен на код, извлеченный из URL:\n Приложение направляет пользователя на страницу Devision OAuth, где он может разрешить доступ к своим данным. Пользователь разрешает доступ приложению. Devision OAuth перенаправляет пользователя на адрес, указанный в поле Callback URL при регистрации приложения. Код подтверждения (или описание ошибки) передается в параметре URL перенаправления. Приложение получает адрес перенаправления и извлекает код подтверждения. Приложение отправляет POST-запрос с кодом. Devision OAuth возвращает токен или ошибку в теле ответа.  Запрос кода подтверждения https://account.garpun.com/oauth2/authorize?response_type=code client_id=\u0026lt;идентификатор приложения\u0026gt; \u0026amp; redirect_uri=\u0026lt;адрес перенаправления\u0026gt; \u0026amp; state=\u0026lt;произвольная строка\u0026gt; \u0026amp; scope=\u0026lt;запрашиваемые необходимые права\u0026gt;  Получение кода подтверждения из URL Когда пользователь разрешает доступ к своим данным Devision OAuth перенаправляет пользователя на указанный вами redirect_uri с добавлением GET параметра code\nОбмен кода подтверждения на токен Приложение отправляет код, а также свой идентификатор и пароль в POST-запросе.\nPOST /oauth2/token HTTP/1.1 Host: account.garpun.com Content-type: application/x-www-form-urlencoded Content-Length: \u0026lt;длина тела запроса\u0026gt; grant_type=authorization_code \u0026amp; code=\u0026lt;код подтверждения\u0026gt; \u0026amp; client_id=\u0026lt;идентификатор приложения\u0026gt; \u0026amp; client_secret=\u0026lt;пароль приложения\u0026gt;  Формат ответа с токеном { \u0026quot;scopes\u0026quot;: [ \u0026quot;userinfo.profile\u0026quot; ], \u0026quot;token_type\u0026quot;: \u0026quot;bearer\u0026quot;, \u0026quot;expires\u0026quot;: 300, \u0026quot;access_token\u0026quot;: \u0026quot;XXXXX\u0026quot;, \u0026quot;refresh_token\u0026quot;: \u0026quot;XXXXX\u0026quot;, \u0026quot;user_id\u0026quot;: 10191, \u0026quot;company_id\u0026quot;: 1 }   scopes: Области доступа, доступные этому токену token_type: Тип выданного токена. Всегда принимает значение «bearer» expires: Время жизни токена в секундах access_token: OAuth-токен с запрошенными правами refresh_token: Токен, который можно использовать только для продления срока жизни соответствующего OAuth-токена\u0026rdquo;\u0026rsquo;  Время жизни refresh-токена совпадает с временем жизни OAuth-токена.\nЕсли выдать токен не удалось, то ответ содержит описание ошибки:\n{ \u0026quot;token_type\u0026quot;: \u0026quot;bearer\u0026quot;, \u0026quot;error\u0026quot;: \u0026quot;\u0026lt;код ошибки\u0026gt;\u0026quot;, \u0026quot;error_description\u0026quot;: \u0026quot;\u0026lt;описание ошибки\u0026gt;\u0026quot; }  Обновить токен Получение токена в обмен на refresh-токен:\n Приложение отправляет POST-запрос с refresh-токеном. Devision OAuth возвращает новый access_token в теле ответа.  POST /oauth2/token HTTP/1.1 Host: account.garpun.com Content-type: application/x-www-form-urlencoded Content-Length: \u0026lt;длина тела запроса\u0026gt; grant_type=refresh_token \u0026amp; refresh_token=\u0026lt;refresh_token\u0026gt; \u0026amp; client_id=\u0026lt;идентификатор приложения\u0026gt; \u0026amp; client_secret=\u0026lt;пароль приложения\u0026gt;  В теле ответа вы получите такую же структуру, как и в случае получения токена по authorization_code\n"
},
{
	"uri": "https://developers.devision.io/cloud/",
	"title": "Devision Cloud Platform",
	"tags": [],
	"description": "",
	"content": " Devision Cloud Platform Регистрируйте свои приложения и используйте наши API\n"
},
{
	"uri": "https://developers.devision.io/cloud/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://developers.devision.io/cloud/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]