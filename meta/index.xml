<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>META on META | Devision Developers</title>
    <link>https://developers.devision.io/meta/</link>
    <description>Recent content in META on META | Devision Developers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Mon, 24 Apr 2017 18:36:24 +0200</lastBuildDate>
    
	<atom:link href="https://developers.devision.io/meta/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Жизненный цикл запроса</title>
      <link>https://developers.devision.io/meta/guides/request_life_cycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/request_life_cycle/</guid>
      <description>Введение При чтении этого раздела вам могут понадобится подробности, описанные в разделе Типы и атрибуты скриптов
 Окружение запроса  env - объект-окружение запроса к серверу. vm - объект для удобной работы с ответом клиенту. На лего странцах отдельный vm на каждый script. pvm - только на LEGO-страницах. Отвечает за хранение данных на всех странце, содержит в себе vm script. DataResult - низкоуровневый класс, отвечающий за ответ с данными по EntityPage.</description>
    </item>
    
    <item>
      <title>Типы и атрибуты скриптов</title>
      <link>https://developers.devision.io/meta/guides/script_types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/script_types/</guid>
      <description>Мотивация Скрипты это блоки получения или изменения данных, имеют атрибуты: - type - определяет тип получения данных: sql, js - id - имя данных для меты, используется для последующих обращений к данным. Грубо говоря имя переменной - elem-attrs - доп. атрибуты элемента конкретного типа
Атрибуты elem-attrs Конфигурируют элемент, указанный в атрибуте elem. Для каждого elem они могут быть разными - ищите нужную документацию в структуре всех классов.
Чаще всего вы будете использовать атрибуты, указывая их в виде json-обекта как в этом примере:</description>
    </item>
    
    <item>
      <title>Billing</title>
      <link>https://developers.devision.io/meta/integrations/billing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/integrations/billing/</guid>
      <description>Java API
Example
&amp;lt;elem states=&amp;quot;default&amp;quot;&amp;gt; &amp;lt;tpl&amp;gt; &amp;lt;p&amp;gt; BillingService нужен для накладывания ограничений на доступный функционал &amp;lt;/p&amp;gt; &amp;lt;p class=&amp;quot;text-warning&amp;quot;&amp;gt; Для просмотра логов откройте chrome devtools console и включили dev mode в мете. &amp;lt;/p&amp;gt; &amp;lt;a ng-click=&amp;quot;changeState(&#39;test_in_js&#39;, {})&amp;quot; href&amp;gt;Go To JS&amp;lt;/a&amp;gt; &amp;lt;/tpl&amp;gt; &amp;lt;/elem&amp;gt; &amp;lt;script type=&amp;quot;meta/js&amp;quot; id=&amp;quot;ex0&amp;quot; states=&amp;quot;test_in_js&amp;quot;&amp;gt; function main(log) { log.info(&#39;ex0 выполняется в любом случае, так как он перед проверкой по биллингу&#39;); } &amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;meta/js&amp;quot; id=&amp;quot;ex1&amp;quot; states=&amp;quot;test_in_js&amp;quot;&amp;gt; function main(log, env, vm, pvm, BillingService) { log.</description>
    </item>
    
    <item>
      <title>ApiClientService</title>
      <link>https://developers.devision.io/meta/integrations/api_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/integrations/api_client/</guid>
      <description>Если вы хотите работать со внутренними api Прямо из META
&amp;lt;script id=&amp;quot;res&amp;quot; type=&amp;quot;meta/js&amp;quot;&amp;gt; function main(ApiClientService, vm) { var apiclient = ApiClientService.buildClient(&amp;quot;accountmanagement&amp;quot;, &amp;quot;v1beta1&amp;quot;); vm.data = apiclient.request(&amp;quot;POST&amp;quot;, &amp;quot;budget-order/get&amp;quot;, { &amp;quot;access_scope&amp;quot;: { &amp;quot;client_id&amp;quot;: &amp;quot;28&amp;quot;, &amp;quot;agency_account&amp;quot;: &amp;quot;larisoll2323@gmail.com&amp;quot;, &amp;quot;operation_id&amp;quot;: MetaUtils.uuid.randomUUID() }, &amp;quot;engine&amp;quot;: &amp;quot;GOOGLE_ADS&amp;quot;, &amp;quot;account&amp;quot;: &amp;quot;9012273876&amp;quot; }).getMap(); } &amp;lt;/script&amp;gt; &amp;lt;elem&amp;gt; &amp;lt;tpl&amp;gt; {{res|json}} &amp;lt;/tpl&amp;gt; &amp;lt;/elem&amp;gt;  </description>
    </item>
    
    <item>
      <title>DataDiffService</title>
      <link>https://developers.devision.io/meta/work_with_data/datadiff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/work_with_data/datadiff/</guid>
      <description>Мотивация Сервис по вычислению разницы между двумя DataResult. В 99% случаев работает сравнимо по скорости с вариантами сравнения сложных данных через запрос в БД, но при этом код сравнения на порядок проще, чем тоже самое на SQL.
Пример использования: https://samples-demo.devision.io/page?p=4363&amp;amp;a=35</description>
    </item>
    
    <item>
      <title>DataTransformService</title>
      <link>https://developers.devision.io/meta/work_with_data/datatransform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/work_with_data/datatransform/</guid>
      <description>Мотивация Когда надо выбрать много данных один раз и потом немного доагрегировать в разных плоскостях и пофильтровать, например для графиков или дашбордах данных из bigquery.
Пример использования: https://samples-demo.devision.io/page?p=4959&amp;amp;a=35
Принципиально все достаточно просто - у вас есть DataResult и вы хотите его перегруппировать. Для этого сперва получаем данные, например sql запросом в скрипте res, а потом в отдельном meta/js скрипте делаем вызов DataTransformService.pivot с необходимыми параметрами.
&amp;lt;script type=&amp;quot;meta/sql&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; id=&amp;quot;res&amp;quot; entity-id=&amp;quot;2629&amp;quot; label=&amp;quot;Исходные данные.</description>
    </item>
    
    <item>
      <title>Google Analytics</title>
      <link>https://developers.devision.io/meta/integrations/google_analytics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/integrations/google_analytics/</guid>
      <description>Google Analytics уже глубоко интегрирован в платформу и многие нужные вам события с интерфейса и backend зачастую автоматически будут поступать в GA.
Автоматически собираемые действия  Открытия страниц Открытие модальных окон (в т.ч. sidenav) Регистрация События ADD из ObjectLogService Клик на кнопку добавление объекта в me-select Выбор пункта меню в me-input type=menu-btn  Отправка событий через Measurement Protocol В скриптах meta/js или meta/sql (с помощью шаблонизатора) вы можете отправлять нужные вам события в GA.</description>
    </item>
    
    <item>
      <title>Google Sheets</title>
      <link>https://developers.devision.io/meta/work_with_data/google_sheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/work_with_data/google_sheets/</guid>
      <description>Мотивация Иногда пользователи хотят управлять отчетами через интеграцию с Google Sheets
Документация по query language: https://developers.google.com/chart/interactive/docs/querylanguage#language-clauses
Административные настройки сервера Для того, чтобы это заработало в основном конфигурационном файле меты должен быть заполнен блок googleShareAccount, где нужно вписать google service account настройки из формата json в формате yaml. После указания ваши пользователи смогут расшаривать файлы на ваш сервисный аккаунт и мета будет получать к ним доступ.
например у нас это аккаунт - robot-valera@devision-io.</description>
    </item>
    
    <item>
      <title>Отслеживание изменений сущностей</title>
      <link>https://developers.devision.io/meta/guides/entity_listeners/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/entity_listeners/</guid>
      <description>Мотивация На случай, если при сохранении формы в модальном окне нужно обновить инпуты в родительской форме или обновить список объектов сущности, если вы изменили или добавили новую.
Случай 1 Бывают случаи, когда у вас есть форма создания/редактирования объекта и в ней есть инпут с выбором объекта другого типа. Например: вы добавляете товар и выбираете его категорию, а если категории нет, то вы хотите прямо здесь ее создать.
В этом случае у инпута выбора категории нужно добавить кнопку создания объекта через &amp;ldquo;addObjectButton&amp;rdquo; и добавить прослушку событий по объектам указаного типа через &amp;ldquo;listen&amp;rdquo; чтобы после создания объект появлвлся в выпадающем списке.</description>
    </item>
    
    <item>
      <title>Обработчики событий сущностей</title>
      <link>https://developers.devision.io/meta/guides/entity_handlers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/entity_handlers/</guid>
      <description>Мотивация Часто хочется иметь middleware функцию проверки доступа к конкретному объекту на карточке объекта для того, чтобы не делать проверку досупа на каждой странице сущности.
Чтобы сделать обработчик вам нужно:
 Сделать страницы с ролью &amp;ldquo;Обработчики событий сущности&amp;rdquo;
 Сделать скрипт cо state и id равному типу обработчика.
  Например:
&amp;lt;script type=&amp;quot;...&amp;quot; id=&amp;quot;check_access&amp;quot; state=&amp;quot;check_access&amp;quot;&amp;gt; SELECT (CASE WHEN author_user_id = :env.userId THEN 200 ELSE 403 END) as status_code FROM pubic.</description>
    </item>
    
    <item>
      <title>Типы данных</title>
      <link>https://developers.devision.io/meta/guides/data_types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/data_types/</guid>
      <description>Основные    Тип Описание     UNKNOWN Неизвестный тип, часто бывает текстовым в действительности. Но иногда БД не может отдать тип и мы не рискуем предполагать. В этих случаях используйте type cast средствами БД   BOOLEAN Булев тип (true/false)   TEXT Текстовое поле без существенных ограничений длины.   INT 32х битное целое число. Диапазон от -2,147,483,648 до +2,147,483,647   LONG 64х битное целое число.</description>
    </item>
    
    <item>
      <title>Шина событий</title>
      <link>https://developers.devision.io/meta/compoments/event_bus/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.devision.io/meta/compoments/event_bus/</guid>
      <description>Мотивация Нужно стремится делать компоненты системы масимально независимыми от бизнес-логики.
Идеально, если при сохранении чего-то смотреть изменившиеся поля и понимать что именно надо выполнить по бизнес-процессу, если, например изменился только статус объекта, однако пока что это невозможно. Однако мы хотели сделать возможность подписываться на изменения объектов, чтобы не добавлять логику оповещения внутренних подсистем предприятия прямо в код страниц META.
Пример: на карточке клиента при сохранении списка главных пользователей клиента надо записывать изменения в сторонюю CRM.</description>
    </item>
    
    <item>
      <title>Шаблонизация</title>
      <link>https://developers.devision.io/meta/guides/template_engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/template_engines/</guid>
      <description>Для шаблонизации используется freemarker.org. Отсутствие переменных при шаблонизации сейчас не является фатальной ошибкой, переменная в такой случае будет заменяться пустой строкой.
Backend шаблонизация Условия do-if Используется для условной фильтрации скриптов и элементов на бекенде. Скрипты не будет исполняться и будет предотвращать отрисовку связанных элементов. Элементы, при установки do-if на них не будут приходить на фронтенд
Пример: https://samples-demo.devision.io/page?p=4551&amp;amp;a=35
&amp;lt;script type=&amp;quot;meta/sql&amp;quot; db-alias=&amp;quot;meta&amp;quot; id=&amp;quot;all_activity&amp;quot; do-if=&amp;quot;env.sp.activity_mode==&#39;all&#39;&amp;quot;&amp;gt; select now() &amp;lt;/script&amp;gt;  Функции Пример вызова:</description>
    </item>
    
    <item>
      <title>Графики</title>
      <link>https://developers.devision.io/meta/guides/charts/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/charts/</guid>
      <description>Являются элементами me-chart. Работают на основе google charts. Примеры тут: http://samples-demo.devision.io/page?a=35&amp;amp;p=3623
Имеют опцию &amp;ldquo;nativeOptions&amp;rdquo; для передачи нативных параметров. Не рекомендуется это использоваться просто так из-за невозможности поддержки возможности смены графиков или более легкого обновления версии при отсутствии обратной совместимости.
nativeOptions можно использовать как вариант для тестирования и с последующим запросом впиливания опции как мета параметр графиков.</description>
    </item>
    
    <item>
      <title>Кеширование</title>
      <link>https://developers.devision.io/meta/guides/cache/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/cache/</guid>
      <description>Многие системы имеют встроенные механизмы кеширование и META не исключение.
В META есть два вида кеша - пользовательский и глобальный.
У скрипта есть два атрибута:
 &amp;ldquo;cache&amp;rdquo; - время жизни кеша в формате 10s - секунды, 10m - минуты, 10h часы. &amp;ldquo;cache-company&amp;rdquo; - добавляется к настройке &amp;ldquo;cache&amp;rdquo; и говорит о том, что кеш не зависит от пользователя, но зависит от env.companyId. Без &amp;ldquo;cache&amp;rdquo; не работает. Не может принимать значения true/false &amp;ldquo;cache-global&amp;rdquo; - добавляется к настройке &amp;ldquo;cache&amp;rdquo; и говорит о том, что кеш глобальный и не зависит от пользователя.</description>
    </item>
    
    <item>
      <title>Вход через META</title>
      <link>https://developers.devision.io/meta/integrations/login_with_meta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/integrations/login_with_meta/</guid>
      <description>Приложение запрашивает код Получение токена в обмен на код, извлеченный из URL:
 Приложение направляет пользователя на страницу META.OAuth, где он может разрешить доступ к своим данным. Пользователь разрешает доступ приложению. META.OAuth перенаправляет пользователя на адрес, указанный в поле Callback URL при регистрации приложения. Код подтверждения (или описание ошибки) передается в параметре URL перенаправления. Приложение получает адрес перенаправления и извлекает код подтверждения. Приложение отправляет POST-запрос с кодом. META.OAuth возвращает токен или ошибку в теле ответа.</description>
    </item>
    
    <item>
      <title>Построение URL</title>
      <link>https://developers.devision.io/meta/guides/build_url/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/build_url/</guid>
      <description>При программировании в Мете во всех случаях стройте ссылки стандартными функциями, всегда стройте относительные ссылки (без имени домена).
Стандартные механизмы В мете уже есть стандартные средства генерации url на карточку объекта или на обычную страницу. Используйте для этого:
 LinkBuildService для meta/js $root.buildEnvUrl для html шаблонов (https://apps.devision.io/page?p=3788&amp;amp;a=35) Стройте ссылки в таблице запросом через hreffield или entity_linkfield (https://apps.devision.io/page?p=3292&amp;amp;a=35)  Параметры  a - applicationId p - pageId e - entityId. ID типа сущности.</description>
    </item>
    
    <item>
      <title>Простейший отчет с фильтрами</title>
      <link>https://developers.devision.io/meta/samples/pages/report_with_filters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/samples/pages/report_with_filters/</guid>
      <description>Для начала ознакомьтесь со статьей Жизненный цикл запроса
 Типичная задача META - вывод списка объектов в виде отчета с фильтрами.
Обычно отчет представляет из себя одну таблицу с фильтрами. Script id такой основной таблицы рекомендуется называть &amp;ldquo;res&amp;rdquo;, чтобы другим разработчикам было привычнее читать ваш код.
Код примера &amp;lt;!-- Фильтрация Атрибут page-search объединяет эти фильтры в общий блок пресетов. Это позволяет пользователю быстрее находить фильтры и сохранять пресеты фильтров --&amp;gt; &amp;lt;script type=&amp;quot;meta/sql&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; label=&amp;quot;Организация&amp;quot; id=&amp;quot;org_ids&amp;quot; elem=&amp;quot;me-select&amp;quot; order=&amp;quot;1&amp;quot; span=&amp;quot;4&amp;quot; elem-attrs=&#39;{&amp;quot;multiple&amp;quot;:true}&#39; page-search&amp;gt; SELECT &amp;quot;organizationId&amp;quot; as id, name as name FROM &amp;quot;organization&amp;quot; order by name &amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;meta/sql&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; label=&amp;quot;Статус&amp;quot; id=&amp;quot;active_mode&amp;quot; elem=&amp;quot;me-select&amp;quot; default=&amp;quot;all&amp;quot; order=&amp;quot;1&amp;quot; span=&amp;quot;4&amp;quot; page-search&amp;gt; SELECT t.</description>
    </item>
    
    <item>
      <title>Список и редактирование сущности</title>
      <link>https://developers.devision.io/meta/samples/pages/simple_entity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/samples/pages/simple_entity/</guid>
      <description>Для начала ознакомьтесь со статьей Жизненный цикл запроса
 Типичная задача META - вывод списка объектов и их редактирование
Регистрация Entity Чтобы начать работать с новой сущностью добавьте ее в репозиторий META AppContent. В списке полей обычно достаточно указать primary key и поле, которе будет считаться именем объекта сущности. Для примера попробуем зарегистрировать таблицу example_entity из БД с meta id &amp;ldquo;meta_samples&amp;rdquo;.
В репозитории AppContent в директории /entity/meta_samples создайте файл example_entity___public.</description>
    </item>
    
    <item>
      <title>Язык запросов META (METAQL)</title>
      <link>https://developers.devision.io/meta/work_with_data/metaql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/work_with_data/metaql/</guid>
      <description>METAQL - Это защищенный SQL для запросов к данным меты. Основан на синтаксисах Oracle + PostgreSQL. Призван дать хороший и безопасный API к данным таблиц или views ваших БД.
Особенности  Поддерживаются только SELECT запросы Поддерживается только AND условия Нельзя называть поля или алясы зарезарвированными именами: date Нет прообразований типов JOIN пока не поддерживаются  Функции В METAQL разрешены не все функции, ниже представлен список доступных на текущий момент.</description>
    </item>
    
    <item>
      <title>Тестирование</title>
      <link>https://developers.devision.io/meta/guides/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/testing/</guid>
      <description>Для того, чтобы на локальной мете можно было войти из под какого-то юзера или запустить тестирование сделана возможность просто указать user_id из-под которого нужно далать авторизоваться&amp;amp;
http://localhost:9999/?local_auth_user_id=XXX где XXX - user_id  Это работает только на тех сборках, где в глобальном конфиге указан isDevMode: true
isDevMode: true &amp;lt;------------- Это нелья устанавливать в Production окружении isFetchDbsFromApi: true name: dev .....  </description>
    </item>
    
    <item>
      <title>Интернационализация (i18n)</title>
      <link>https://developers.devision.io/meta/guides/i18n/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/i18n/</guid>
      <description>На системном уровне поддерживаются языки: ru, en.
 Для того, чтобы начать переводить нужно:
 добавить новые компоненты в таблицу meta.component, если текущих вам недостаточно. Не забудьте указать языки для перевода в поле i18n_langs разметить страницы копонентами в настройках старниц в app-content запустить i18n-app.py и собрать данные на перевод. если есть новые компоненты entity надо поместить в папку entity в компоненте  i18n-app.py отпарсит контент мета-страниц на наличие размерки перевода, а так же обойдет entity в app-content и соберет данные на перевод.</description>
    </item>
    
    <item>
      <title>Embedded Frames</title>
      <link>https://developers.devision.io/meta/integrations/embedded_frames/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/integrations/embedded_frames/</guid>
      <description>Пример на основе интеграции старого Garpun в новое META-приложение
В Garpun мы разместили код
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; function inIframe() { try { return window.self !== window.top; } catch (e) { return true; } } document.addEventListener(&amp;quot;DOMContentLoaded&amp;quot;, function () { if (inIframe()) { // Это мы использовали чтобы убрать ненужные кнопки document.body.classList.add(&amp;quot;garpunEmbedded&amp;quot;); } document.body.classList.remove(&amp;quot;garpunLoading&amp;quot;); }); // (metaframewatcher = window.metaframewatcher || []).push({ height_classes: [&#39;t_window&#39;, &#39;cover&#39;, &#39;stickyWrap&#39;, &#39;mainBox&#39;] }); if (inIframe()) { // Это не относится к задаче встраивания напрямую, но наверняка будет полезно для GTM для отключения виджетов поддержки и пр window[&#39;IS_EMBED_MODE&#39;] = true; // Размещаем загрузки интеграционного скрипта (function() { var lt = document.</description>
    </item>
    
    <item>
      <title>Nginx Proxy Headers</title>
      <link>https://developers.devision.io/meta/integrations/nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/integrations/nginx/</guid>
      <description>Настраиваются на nginx при проксировании запосов в Java приложение, или через Chrome плагин ModHeader (https://chrome.google.com/webstore/detail/modheader/idgpnmonknjnojddfkpgkljpfnnfcklj) для разработки
X-META-AppID Говорит о том, что МЕТА должна отвечать пользователю как конкретное приложение с установленным лого, css и пр
server { listen *:80; server_name example.com; charset utf8; location / { proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-META-AppID 3; proxy_pass http://127.0.0.1:8083; } }  X-META-Allowed-Apps Говорит о том, что МЕТА должна отвечать пользователю как конкретное приложение с установленным лого, css и пр Отличается от HEADER_X_META_APP_ID тем, что это будет работать как просто meta.</description>
    </item>
    
    <item>
      <title>SDK</title>
      <link>https://developers.devision.io/meta/integrations/sdk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/integrations/sdk/</guid>
      <description>Существует официальная библиотека для работу с метой на Python3
Исходники
Документация</description>
    </item>
    
    <item>
      <title>Именование сущностей в БД</title>
      <link>https://developers.devision.io/meta/guides/db_naming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/db_naming/</guid>
      <description>При разработке новой БД предлагается придерживаться следующих правил. При этом, если у вас есть готовая БД, то вы не должны хотеть полностью переделать ее соглашения, так как это бесполезная работа. Просто продолжайте использовать то, что у вас есть.
 Все таблицы должны иметь несоставной первичный ключ, который должен называться id Все таблицы, представления, функции, триггерные функции и типы должны иметь комментарий Поля таблиц и view должны иметь комментарий. Исключения: поля с внешними ключами, общепонятные поля (первичный ключ, views, clicks, name, title и т.</description>
    </item>
    
    <item>
      <title>Открытие модального окна</title>
      <link>https://developers.devision.io/meta/samples/pages/open_modal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/samples/pages/open_modal/</guid>
      <description>В таблице списке объектов сущности вывести страницу в контекстное меню Например у вас есть список пользователей и на карточке пользователя есть страница проектов, доступных пользователю.
 Включите режим разработчика, если он не ключен Зайдите на интресующую вас страницу Откройте меню радактирования настроек приложения в поле &amp;ldquo;Вид в контекстном меню&amp;rdquo; выберите &amp;ldquo;Модальное окно&amp;rdquo; или &amp;ldquo;Выезжающее справа окно&amp;rdquo; Сохраните Сбросьте кеш меты Обновите страницу через F5  Пример такой страницы: https://apps.devision.io/card?e=example_entity&amp;amp;o=08f3395b-31f2-42c9-917e-a5f2b7bd4a95&amp;amp;p=5183&amp;amp;a=35</description>
    </item>
    
    <item>
      <title>Тикеты</title>
      <link>https://developers.devision.io/meta/compoments/ticket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/compoments/ticket/</guid>
      <description>Таблицы  issue: Непосредственно сами тикеты. Основная таблица issue_entity: Сущности, доступные для выбора &amp;ldquo;категории&amp;rdquo; тикета при создании. Тип объекта, в рамках которого делается тикет. Например тикет может быть по клиенту, медиаплану, сотруднику issue_field: Доп. поля, которые можно навешивать потом на типы тикетов issue_logwork: Трекинг времени по тикетам issue_msg: Комментарии к тикетам, приложенные файлы issue_priority: Справочник приоритетов тикетов issue_status: Справочник статусов тикетов issue_type: Справочник типов тикетов, Тут настраивается доступность типов тикетов для issue_entity, доступность основных или доп полей  Управляющие функции БД Пользовательские функции для изменения бизнес логики отмечены жирным шрифтом.</description>
    </item>
    
    <item>
      <title>header</title>
      <link>https://developers.devision.io/meta/_header/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.devision.io/meta/_header/</guid>
      <description>META</description>
    </item>
    
    <item>
      <title>ApiClientService</title>
      <link>https://developers.devision.io/meta/reference/java_api/apiclientservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/apiclientservice/</guid>
      <description>   Метод и описание Возвращаемый тип     buildClient ( apiName: String, apiVersion: String) ApiClient   buildClient ( schemaHostPostVersion: String) ApiClient    </description>
    </item>
    
    <item>
      <title>BillingService</title>
      <link>https://developers.devision.io/meta/reference/java_api/billingservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/billingservice/</guid>
      <description>   Метод и описание Возвращаемый тип     checkAddSkuUsage ( productId: String, skuId: String, plannedAddUsageAmount: long) void   init ( ) void    </description>
    </item>
    
    <item>
      <title>CryptService</title>
      <link>https://developers.devision.io/meta/reference/java_api/cryptservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/cryptservice/</guid>
      <description>   Метод и описание Возвращаемый тип     checkJWTExpire ( decodedJWT: DecodedJWT) void   decode ( str: String) String   decodeJSONObj ( str: String, clazz: Class) Object   encode ( str: String) String   encode ( str: String, expiresAt: Date) String   encodeJSONObj ( obj: Object) String   encodeJSONObj ( obj: Object, validTime: String) String    </description>
    </item>
    
    <item>
      <title>CurrentUserService</title>
      <link>https://developers.devision.io/meta/reference/java_api/currentuserservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/currentuserservice/</guid>
      <description>   Метод и описание Возвращаемый тип     get ( ) MetaUser   getAuthentication ( ) Authentication   getCompanyId ( ) long   getId ( ) long   getIp ( ) String   getLanguage ( ) String   getLanguageId ( ) Integer   hasAuthentication ( ) boolean   hasRole ( role: String) boolean   isAnonymous ( ) boolean   isDebugMode ( ) boolean   isDeveloper ( ) boolean   isNotDeveloper ( ) boolean   reload ( ) void   rememberMe ( ) void   rememberMeIfTokenExistsInUrl ( ) void   setAuthenticate ( user: MetaUser) UsernamePasswordAuthenticationToken   userHasRole ( role: String) boolean    </description>
    </item>
    
    <item>
      <title>DataDiffService</title>
      <link>https://developers.devision.io/meta/reference/java_api/datadiffservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/datadiffservice/</guid>
      <description>   Метод и описание Возвращаемый тип     diff ( a: DataResult, b: DataResult, config: ScriptObjectMirror) DataResult   diff ( oldV: DataResult, newV: DataResult, conf: DiffConfig) DataResult    </description>
    </item>
    
    <item>
      <title>DataTransformService</title>
      <link>https://developers.devision.io/meta/reference/java_api/datatransformservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/datatransformservice/</guid>
      <description>   Метод и описание Возвращаемый тип     pivot ( in: DataResult, conf: PivotConfig) DataResult   pivot ( in: DataResult, conf: ScriptObjectMirror) DataResult   sum ( o1: Object, o2: Object) Object    </description>
    </item>
    
    <item>
      <title>EntityService</title>
      <link>https://developers.devision.io/meta/reference/java_api/entityservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/entityservice/</guid>
      <description>   Метод и описание Возвращаемый тип     buildForm ( entityId: String, formMode: FormMode) LegoElem   buildForm ( entityId: String, formMode: String) LegoElem   getObject ( entityId: String, objectId: String) DataResult    </description>
    </item>
    
    <item>
      <title>GaService</title>
      <link>https://developers.devision.io/meta/reference/java_api/gaservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/gaservice/</guid>
      <description>   Метод и описание Возвращаемый тип     eventTrack ( category: String, action: String) void   eventTrack ( category: String, action: String, label: String) void   eventTrack ( category: String, action: String, label: String, value: Long) void   send ( parameters: Map) void    </description>
    </item>
    
    <item>
      <title>HtmlService</title>
      <link>https://developers.devision.io/meta/reference/java_api/htmlservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/htmlservice/</guid>
      <description>   Метод и описание Возвращаемый тип     html2text ( html: String) String    </description>
    </item>
    
    <item>
      <title>LegoToMarkdownService</title>
      <link>https://developers.devision.io/meta/reference/java_api/legotomarkdownservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/legotomarkdownservice/</guid>
      <description>   Метод и описание Возвращаемый тип     init ( ) void   toMarkdown ( legoForm: Object, formData: Object) String    </description>
    </item>
    
    <item>
      <title>LinkBuildService</title>
      <link>https://developers.devision.io/meta/reference/java_api/linkbuildservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/linkbuildservice/</guid>
      <description>   Метод и описание Возвращаемый тип     build ( href: String, content: String) String   getFullUrl ( entityId: String, objectId: String, pageId: String) String   getHtmlLink ( content: String, entityId: String, objectId: String) String   getHtmlLink ( content: String, entityId: String, objectId: String, pageId: String) String   getPageFullUrl ( pageId: String, sp: Map) String    </description>
    </item>
    
    <item>
      <title>MarkdownService</title>
      <link>https://developers.devision.io/meta/reference/java_api/markdownservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/markdownservice/</guid>
      <description>   Метод и описание Возвращаемый тип     render ( markdownText: Object) String   render ( markdownText: Object, siteUrl: String) String   render ( markdownText: String) String   render ( markdownText: String, siteUrl: String) String    </description>
    </item>
    
    <item>
      <title>MediaService</title>
      <link>https://developers.devision.io/meta/reference/java_api/mediaservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/mediaservice/</guid>
      <description>   Метод и описание Возвращаемый тип     deleteExpired ( env: Env, mediaId: String) void   get ( env: Env, mediaId: String) MediaFile   getDownloadUrlPart ( id: String) String   getFilesBase64ZipArchive ( files: List) String   getViewUrlPart ( id: String) String   persist ( env: Env, fileBase64Content: String, filename: String, extension: String, mime: String, isPrivate: boolean) MediaFile   persist ( env: Env, fileBase64Content: String, filename: String, extension: String, mime: String, isPrivate: boolean, origin: String) MediaFile   prepareFileName ( env: Env, filename: String) String   sendFileToResponse ( response: HttpServletResponse, media: MediaFile, fname: String, addHeadersForDownload: boolean) void   sendHeaders ( response: HttpServletResponse, contentType: String, fname: String, addHeadersForDownload: boolean) void   upsert ( req: UpsertRequest) MediaFile    </description>
    </item>
    
    <item>
      <title>MetaDatabaseService</title>
      <link>https://developers.devision.io/meta/reference/java_api/metadatabaseservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/metadatabaseservice/</guid>
      <description>   Метод и описание Возвращаемый тип     createMetaDataSourceInstance ( db: CDatabase) MetaDataSource   eraseDBPool ( ) void   getDatabaseType ( dbAlias: String) DatabaseType   getMDSource ( dbAlias: String) MetaDataSource   getMetaDS ( ) JdbcMetaDataSource   getMetaJdbcTemplate ( ) JdbcTemplate   getRedis ( ) RedissonClient    </description>
    </item>
    
    <item>
      <title>MutateTableService</title>
      <link>https://developers.devision.io/meta/reference/java_api/mutatetableservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/mutatetableservice/</guid>
      <description>   Метод и описание Возвращаемый тип     mutate ( mutateJob: MutateJob) void   mutate ( request: MutateJobRequest) MutateJobResponse   mutate ( request: ScriptObjectMirror) MutateJobResponse    </description>
    </item>
    
    <item>
      <title>ObjectLogService</title>
      <link>https://developers.devision.io/meta/reference/java_api/objectlogservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/objectlogservice/</guid>
      <description>   Метод и описание Возвращаемый тип     buildLog ( ) Log   coreErrorEventTrack ( action: String, label: String, value: Long) void   coreEventTrack ( action: String, label: String) void   coreEventTrack ( action: String, label: String, value: Long) void   log ( entityId: String, objectId: Object, code: Code) void   log ( entityId: String, objectId: Object, code: String) void   log ( objectLog: Log) void   logValue ( entityId: String, objectId: Object, code: Code, value: Object) void   logValue ( entityId: String, objectId: Object, code: Code, value: Object, form: String) void   logValue ( entityId: String, objectId: Object, code: String, value: Object) void   logValue ( entityId: String, objectId: Object, code: String, value: Object, form: String) void    </description>
    </item>
    
    <item>
      <title>SmartFormService</title>
      <link>https://developers.devision.io/meta/reference/java_api/smartformservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/smartformservice/</guid>
      <description>   Метод и описание Возвращаемый тип     handle ( env: Map, originalEnv: Env, vm: ViewModel, pvm: ViewModel) void    </description>
    </item>
    
    <item>
      <title>TableColumnService</title>
      <link>https://developers.devision.io/meta/reference/java_api/tablecolumnservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/tablecolumnservice/</guid>
      <description>   Метод и описание Возвращаемый тип     buildFilters ( outputPlaceholderVarName: String, columns: DataResult, data: AdvancedFilterData) GeneratedFilter   buildFilters ( outputPlaceholderVarName: String, columns: DataResult, data: Object) GeneratedFilter   buildFn ( aggFn: AggFn, expr: String) String   escapeDivisionByZero ( text: String, escapePrefix: String, escapePostfix: String) String   extractTableParams ( columns: DataResult, dimensions: List, metrics: List) TableSettings   getMetricsFromExpr ( in: String) Set    </description>
    </item>
    
    <item>
      <title>TranslateService</title>
      <link>https://developers.devision.io/meta/reference/java_api/translateservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/translateservice/</guid>
      <description>   Метод и описание Возвращаемый тип     getAllPlaceholders ( language: String) Map   i18n ( language: String, text: String, args: Object[], defaultText: String) String   i18n ( placeholder: String) String   i18n ( placeholder: String, args: Object[]) String   i18n ( placeholder: String, args: Object[], defaultText: String) String   i18n ( placeholder: String, defaultText: String) String   i18nEntityFieldName ( entityId: String, fieldName: String) String   i18nEntityName ( entity: CEntity) String   i18nEntityName ( entityId: String) String   i18nPageName ( page: CPage, language: String) String   i18nSqlField ( placeholder: String) String   i18nSqlField ( tableAlias: String, placeholder: String) String   i18nSqlField ( tableAlias: String, placeholder: String, lang: String) String    </description>
    </item>
    
    <item>
      <title>UserRecoveryService</title>
      <link>https://developers.devision.io/meta/reference/java_api/userrecoveryservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/java_api/userrecoveryservice/</guid>
      <description>   Метод и описание Возвращаемый тип     getDoublePasswordHash ( login: String) String   sendNotice ( login: String, appAlias: String, state: String) SendNoticeResponse    </description>
    </item>
    
    <item>
      <title>Элемент me-chart</title>
      <link>https://developers.devision.io/meta/reference/ui_controls/me-chart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/ui_controls/me-chart/</guid>
      <description>Основной и единственный элемент для вывода графиков Работает на Google Charts
@example https://apps.devision.io/page?p=3623&amp;amp;a=35
@link https://developers.google.com/chart/interactive/docs/gallery
Общее Обратите внимание на структуру всех классов
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;curved&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;dualY&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;hAxisMinValue&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;height&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;nativeOptions&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;pieHole&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;sliceVisibilityThreshold&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;stacked&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;stretched&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;vAxisMinValue&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;vAxisTextPosition&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;zoomButton&amp;quot;: &amp;quot;( none | left )&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-chart&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-input</title>
      <link>https://developers.devision.io/meta/reference/ui_controls/me-input/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/ui_controls/me-input/</guid>
      <description>Основной элемент для ввода данных Использует attrs.type для уточнения внешнего вида элемента. Может принимать вид текстового поля ввода, выпадающего списка, checkbox, radio и пр.
@returns any - тип результируещего значения зависит от [[IMeInputAttrs.type]] элемента и от значения multiple
Общее Обратите внимание на структуру всех классов
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;addObjectButton&amp;quot;: { &amp;quot;cssClass&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;cssProperties&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;disabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;drawAsMainElementOnParentElemIsEmpty&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon_image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; } }, &amp;quot;align&amp;quot;: &amp;quot;( left | right )&amp;quot;, &amp;quot;autoSelect&amp;quot;: &amp;quot;( none | first | if_only_one )&amp;quot;, &amp;quot;contextualClass&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;create&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;ctrlEnterApply&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;disabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;enterSubmit&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;fastViewObjectButton&amp;quot;: { &amp;quot;drawActorList&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;drawTopMenu&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, md, lg, fullscreen, max )&amp;quot;, &amp;quot;modalTitle&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;( modal, sidenav, hidden )&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;formInputName&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;groupAddon&amp;quot;: { &amp;quot;text&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;inlineElements&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;inlineLabel&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;max&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;maxHeight&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;min&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;( JSON | JSON_OBJECT | HTML | SQL )&amp;quot;, &amp;quot;multiple&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;native&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;options&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;fast_select&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon_image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;link&amp;quot;: { &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, lg, normal, max )&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;value&amp;quot;: { &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;mode&amp;quot;: &amp;quot;( modal, sidenav, hidden )&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;url&amp;quot;: &amp;quot;(string)&amp;quot; } }, &amp;quot;mentio&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;items&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;triggerChar&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;style&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: { &amp;quot;unit&amp;quot;: { &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(any)&amp;quot; } } ], &amp;quot;pattern&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;placeholder&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;readonly&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;required&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;rows&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;scaleByContent&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;step&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;timePicker&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;type&amp;quot;: &amp;quot;( text | select | duallist | submit | textarea | checkbox | radio | me-summary-btn | me-tabs | filecontent | url | tel | email | percent )&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;verticalColumns&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;viewSize&amp;quot;: &amp;quot;( xs | sm | lg )&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-input&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-lego</title>
      <link>https://developers.devision.io/meta/reference/ui_controls/me-lego/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/ui_controls/me-lego/</guid>
      <description>Основной элемент-контейнер для рендеринга элементов. Рендерится в me-page как основной контейнер, а так же может быть использован внутри себя и себе подобных контейнеров: me-lego, me-lego-list, me-wizard
Общее Обратите внимание на структуру всех классов
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;background&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;collapsable&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;defaultBlockEnabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;formHorizontal&amp;quot;: { &amp;quot;elemLabelGridSize&amp;quot;: &amp;quot;(number)&amp;quot; }, &amp;quot;hideLabelsAttr&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;logo&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;openContent&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;optional&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;style&amp;quot;: &amp;quot;( default | card )&amp;quot;, &amp;quot;viewSize&amp;quot;: &amp;quot;( sm )&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;elems&amp;quot;: [ { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-lego&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-lego-list</title>
      <link>https://developers.devision.io/meta/reference/ui_controls/me-lego-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/ui_controls/me-lego-list/</guid>
      <description>Основной элемент-контейнер для рендеринга элементов. Рендерится в me-page как основной контейнер, а так же может быть использован внутри себя и себе подобных контейнеров: me-lego, me-lego-list, me-wizard
@example https://apps.devision.io/page?p=3723&amp;amp;a=35
Общее Обратите внимание на структуру всех классов
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;addBtnText&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;asJson&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;hideNonFirstLabels&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;markDelete&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;sortable&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;style&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;elems&amp;quot;: [ { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-lego-list&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-pivot</title>
      <link>https://developers.devision.io/meta/reference/ui_controls/me-pivot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/ui_controls/me-pivot/</guid>
      <description>Сводная таблица (Pivot Table) на JS Загружает все даныые для себя на клиента и крутит и считает все на JavaScript Не рекомендуется вгружать в контрол более 10 000 строк Используется в инструменте &amp;ldquo;Анализ данных&amp;rdquo; для [[IMeTable]]
@link https://pivottable.js.org
@example https://apps.devision.io/page?p=4230&amp;amp;a=35
Общее Обратите внимание на структуру всех классов
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;datatype&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;native&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;skipColGrandTotals&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;skipEditControls&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;skipRowGrandTotals&amp;quot;: &amp;quot;(boolean)&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-pivot&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-submit</title>
      <link>https://developers.devision.io/meta/reference/ui_controls/me-submit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/ui_controls/me-submit/</guid>
      <description>Использует все от [[IMeInput]] и просто рефрешит форму при нажатии
Общее Обратите внимание на структуру всех классов
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;addObjectButton&amp;quot;: { &amp;quot;cssClass&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;cssProperties&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;disabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;drawAsMainElementOnParentElemIsEmpty&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon_image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; } }, &amp;quot;align&amp;quot;: &amp;quot;( left | right )&amp;quot;, &amp;quot;autoSelect&amp;quot;: &amp;quot;( none | first | if_only_one )&amp;quot;, &amp;quot;contextualClass&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;create&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;ctrlEnterApply&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;disabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;enterSubmit&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;fastViewObjectButton&amp;quot;: { &amp;quot;drawActorList&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;drawTopMenu&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, md, lg, fullscreen, max )&amp;quot;, &amp;quot;modalTitle&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;( modal, sidenav, hidden )&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;formInputName&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;groupAddon&amp;quot;: { &amp;quot;text&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;inlineElements&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;inlineLabel&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;max&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;maxHeight&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;min&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;( JSON | JSON_OBJECT | HTML | SQL )&amp;quot;, &amp;quot;multiple&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;native&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;options&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;fast_select&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon_image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;link&amp;quot;: { &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, lg, normal, max )&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;value&amp;quot;: { &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;mode&amp;quot;: &amp;quot;( modal, sidenav, hidden )&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;url&amp;quot;: &amp;quot;(string)&amp;quot; } }, &amp;quot;mentio&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;items&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;triggerChar&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;style&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: { &amp;quot;unit&amp;quot;: { &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(any)&amp;quot; } } ], &amp;quot;pattern&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;placeholder&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;readonly&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;required&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;rows&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;scaleByContent&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;step&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;timePicker&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;type&amp;quot;: &amp;quot;( text | select | duallist | submit | textarea | checkbox | radio | me-summary-btn | me-tabs | filecontent | url | tel | email | percent )&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;verticalColumns&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;viewSize&amp;quot;: &amp;quot;( xs | sm | lg )&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-submit&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-table</title>
      <link>https://developers.devision.io/meta/reference/ui_controls/me-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/ui_controls/me-table/</guid>
      <description>Основной и единственный элемент для вывода таблиц и редактируемых таблиц
Общее Обратите внимание на структуру всех классов
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;analyzable&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;addObjectButton&amp;quot;: { &amp;quot;cssClass&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;cssProperties&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;disabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;drawAsMainElementOnParentElemIsEmpty&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon_image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; } }, &amp;quot;childEntityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;exportOptions&amp;quot;: { &amp;quot;dialog&amp;quot;: &amp;quot;(boolean)&amp;quot; }, &amp;quot;goalSeek&amp;quot;: { &amp;quot;defaultVariantId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;variantsRefPvmData&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;hiddenColumns&amp;quot;: { &amp;quot;allowedGroupIds&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;columns&amp;quot;: [ &amp;quot;(string)&amp;quot; ] }, &amp;quot;menu&amp;quot;: { &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;includeCellValues&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;includeColumnsMetadata&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;includeRowValues&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, md, lg, fullscreen, max )&amp;quot;, &amp;quot;modalTitle&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;( modal, sidenav, hidden )&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;options&amp;quot;: { &amp;quot;entityCardLink&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;header&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;nowrapData&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;pinHeader&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;rowHeaders&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;rowsCounter&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;tableCssClass&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;search&amp;quot;: { &amp;quot;placeholder&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; } }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;exportable&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;filterable&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-table&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-tabs</title>
      <link>https://developers.devision.io/meta/reference/ui_controls/me-tabs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/ui_controls/me-tabs/</guid>
      <description>Элементы табсета ( [[IMeTabs.elems]] ) и есть набор табов
@example https://apps.devision.io/page?p=3708&amp;amp;a=35
@example https://apps.devision.io/page?p=4283&amp;amp;a=35
Общее Обратите внимание на структуру всех классов
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;entityCardLink&amp;quot;: { &amp;quot;drawActorList&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;drawTopMenu&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, md, lg, fullscreen, max )&amp;quot;, &amp;quot;modalTitle&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;( modal, sidenav, hidden )&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;loadAllOnInit&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;removable&amp;quot;: &amp;quot;(boolean)&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;elems&amp;quot;: [ { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-tabs&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-wizard</title>
      <link>https://developers.devision.io/meta/reference/ui_controls/me-wizard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/reference/ui_controls/me-wizard/</guid>
      <description>Элементы визарда ( [[IMeWizard.elems]] ) и есть набор шагов
@example https://apps.devision.io/page?p=3570&amp;amp;a=35
Общее Обратите внимание на структуру всех классов
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;loadAllOnInit&amp;quot;: &amp;quot;(boolean)&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;elems&amp;quot;: [ { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;inlineForm&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selectAfterAdd&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-wizard&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;persistValueView&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;waitingId&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selectedValueView&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;valid&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;validateInProgress&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
  </channel>
</rss>