<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>META on META | Devision Developers</title>
    <link>https://developers.devision.io/meta/</link>
    <description>Recent content in META on META | Devision Developers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Mon, 24 Apr 2017 18:36:24 +0200</lastBuildDate>
    
	<atom:link href="https://developers.devision.io/meta/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Быстрый старт</title>
      <link>https://developers.devision.io/meta/guides/quick_start/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/quick_start/</guid>
      <description>Для успешного начала работы вам стоит ознакомится с документацией из этого списка:
 Типы скриптов Шаблонизация Окружение запроса Зайти в МЕТА Примеры  </description>
    </item>
    
    <item>
      <title>Состояния страниц</title>
      <link>https://developers.devision.io/meta/guides/understanding_env_states/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/understanding_env_states/</guid>
      <description>Введение env.state - id текущего состояния страницы. Это можно сравнить с action в контроллере MVC. По умолчанию default env.sp - параметры состояния
Код примера Вот простой код для примера. Тут три ссылки, которые меняют состояние страницы. В script-ах указаны states, в которых script будет участвовать (будет выполняться). Если states для script или elem не указан, то script или elem участвует во всех state
&amp;lt;elem&amp;gt; &amp;lt;tpl&amp;gt; &amp;lt;a ng-click=&amp;quot;changeState(&#39;first&#39;, {&#39;foo&#39;:1})&amp;quot;&amp;gt;to first&amp;lt;/a&amp;gt; | &amp;lt;a ng-click=&amp;quot;changeState(&#39;two&#39;, {&#39;bar&#39;:2})&amp;quot;&amp;gt;to two&amp;lt;/a&amp;gt; | &amp;lt;a ng-click=&amp;quot;changeState(&#39;three&#39;, env.</description>
    </item>
    
    <item>
      <title>Google Sheets</title>
      <link>https://developers.devision.io/meta/guides/google_sheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/google_sheets/</guid>
      <description>Мотивация Иногда пользователи хотят управлять отчетами через интеграцию с Google Sheets
Документация по query language: https://developers.google.com/chart/interactive/docs/querylanguage#language-clauses
Административные настройки сервера Для того, чтобы это заработало в основном конфигурационном файле меты должен быть заполнен блок googleShareAccount, где нужно вписать google service account настройки из формата json в формате yaml. После указания ваши пользователи смогут расшаривать файлы на ваш сервисный аккаунт и мета будет получать к ним доступ.
например у нас это аккаунт - robot-valera@devision-io.</description>
    </item>
    
    <item>
      <title>Окружение запроса</title>
      <link>https://developers.devision.io/meta/guides/request_response_vars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/request_response_vars/</guid>
      <description>Введение  env - объект-окружение запроса к серверу. vm - объект для удобной работы с ответом клиенту. На лего странцах отдельный vm на каждый script. pvm - только на LEGO-страницах. Отвечает за хранение данных на всех странце, содержит в себе vm script. DataResult - низкоуровневый класс, отвечающий за ответ с данными по EntityPage. Его нельзя получить так как он никуда не передается, существует вне scipt - над ним. Создается вручную при необходимости только в meta/js скриптах.</description>
    </item>
    
    <item>
      <title>Отслеживание изменений сущностей</title>
      <link>https://developers.devision.io/meta/guides/entity_listeners/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/entity_listeners/</guid>
      <description>Мотивация Бывают случаи, когда у вас есть форма создания/редактирования объекта и в ней есть инпут с выбором объекта другого типа. Например: вы добавляете товар и выбираете его категорию, а если категории нет, то вы хотите прямо здесь ее создать.
В этом случае у инпута выбора категории нужно добавить кнопку создания объекта через &amp;ldquo;addObjectButton&amp;rdquo; и добавить прослушку событий по объектам указаного типа через &amp;ldquo;listen&amp;rdquo; чтобы после создания объект появлвлся в выпадающем списке.</description>
    </item>
    
    <item>
      <title>Обработчики событий сущностей</title>
      <link>https://developers.devision.io/meta/guides/entity_handlers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/entity_handlers/</guid>
      <description>Мотивация Часто хочется иметь middleware функцию проверки доступа к конкретному объекту на карточке объекта для того, чтобы не делать проверку досупа на каждой странице сущности.
Чтобы сделать обработчик вам нужно:
 Сделать страницы с ролью &amp;ldquo;Обработчики событий сущности&amp;rdquo;
 Сделать скрипт cо state и id равному типу обработчика.
  Например:
&amp;lt;script type=&amp;quot;...&amp;quot; id=&amp;quot;check_access&amp;quot; state=&amp;quot;check_access&amp;quot;&amp;gt; SELECT (CASE WHEN author_user_id = :env.userId THEN 200 ELSE 403 END) as status_code FROM pubic.</description>
    </item>
    
    <item>
      <title>Шаблонизация</title>
      <link>https://developers.devision.io/meta/guides/template_engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/template_engines/</guid>
      <description>Для шаблонизации используется freemarker.org. Отсутствие переменных при шаблонизации сейчас не является фатальной ошибкой, переменная в такой случае будет заменяться пустой строкой.
Backend шаблонизация Функции Пример вызова:
 ${get_bean(String)} - Получение инстанса Java сервиса ${to_json(Object)} - Конвертация объекта в json ${to_date(String)} - Приведение к дате ${pg_quote_literal(String)} - Экранирование строки для PostgreSQL ${pg_quote_ident(String)} - Экранирование идентификатора (имя столбца, таблицы, схемы) для PostgreSQL  Полезно знать! Есть простой способ привести переменную-объект из env.</description>
    </item>
    
    <item>
      <title>Графики</title>
      <link>https://developers.devision.io/meta/guides/charts/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/charts/</guid>
      <description>Являются элементами me-chart. Работают на основе google charts. Примеры тут: http://meta.realweb.ru/page?a=35&amp;amp;p=3623
Имеют опцию &amp;ldquo;nativeOptions&amp;rdquo; для передачи нативных параметров. Не рекомендуется это использоваться просто так из-за невозможности поддержки возможности смены графиков или более легкого обновления версии при отсутствии обратной совместимости.
nativeOptions можно использовать как вариант для тестирования и с последующим запросом впиливания опции как мета параметр графиков.</description>
    </item>
    
    <item>
      <title>Кеширование</title>
      <link>https://developers.devision.io/meta/guides/cache/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/cache/</guid>
      <description>Многие системы имеют встроенные механизмы кеширование и META не исключение.
В META есть два вида кеша - пользовательский и глобальный.
У скрипта есть два атрибута:
 &amp;ldquo;cache&amp;rdquo; - время жизни кеша в формате 10s - секунды, 10m - минуты, 10h часы. &amp;ldquo;cache-global&amp;rdquo; - добавляется к настройке &amp;ldquo;cache&amp;rdquo; и говорит о том, что кеш глобальный и не зависит от пользователя. Без &amp;ldquo;cache&amp;rdquo; не работает. Не может принимать значения true/false  Пользовательский кеш В примере указан только атрибут &amp;ldquo;cache&amp;rdquo;, что говорит, что кеш есть, он на 5 минут и он зависит от пользователя Зависит от: applicationId, objectId, objectId, stateParams, state, limit/offset и userId</description>
    </item>
    
    <item>
      <title>Аналитика</title>
      <link>https://developers.devision.io/meta/embed_api/analytics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/embed_api/analytics/</guid>
      <description>Мета предоставляет сервис отслеживания событий наподобие Google Analytics.
ВАЖНО! В отличие от простого embed.js встраивания iframe и других мета страниц. Трекер пока что имеет зависимость от Jquery. Поэтому jquery на момент инициализации трекера уже должен быть загружен
 Подключается код через embed.js скрипт, выглядит это следующим образом:
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; // Требует Jquery в момент загрузки (function (i,s,o,g,r,a,m) { i[&#39;MetaEmbedObject&#39;]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)}, i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,&#39;script&#39;,&#39;//embed.garpun.com/static/embed.js&#39;,&#39;me&#39;); // Инициализируйте свой трекер me(&#39;initTracker&#39;, &#39;YOUR_TRACKER_NAME&#39;); &amp;lt;/script&amp;gt;  Отслеживание страниц - pageview Имеет идентичный GA api - https://developers.</description>
    </item>
    
    <item>
      <title>Вход через META</title>
      <link>https://developers.devision.io/meta/oauth/login_with_meta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/oauth/login_with_meta/</guid>
      <description>Приложение запрашивает код Получение токена в обмен на код, извлеченный из URL:
 Приложение направляет пользователя на страницу META.OAuth, где он может разрешить доступ к своим данным. Пользователь разрешает доступ приложению. META.OAuth перенаправляет пользователя на адрес, указанный в поле Callback URL при регистрации приложения. Код подтверждения (или описание ошибки) передается в параметре URL перенаправления. Приложение получает адрес перенаправления и извлекает код подтверждения. Приложение отправляет POST-запрос с кодом. META.OAuth возвращает токен или ошибку в теле ответа.</description>
    </item>
    
    <item>
      <title>Построение URL</title>
      <link>https://developers.devision.io/meta/guides/build_url/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/build_url/</guid>
      <description>При программировании в Мете во всех случаях стройте ссылки стандартными функциями, всегда стройте относительные ссылки (без имени домена).
Стандартные механизмы В мете уже есть стандартные средства генерации url на карточку объекта или на обычную страницу. Используйте для этого:
 LinkBuildService для meta/js $root.buildEnvUrl для html шаблонов (https://apps.devision.io/page?p=3788&amp;amp;a=35) Стройте ссылки в таблице запросом через hreffield или entity_linkfield (https://apps.devision.io/page?p=3292&amp;amp;a=35)  Параметры  a - applicationId p - pageId e - entityId. ID типа сущности.</description>
    </item>
    
    <item>
      <title>Inject API</title>
      <link>https://developers.devision.io/meta/embed_api/inject_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/embed_api/inject_api/</guid>
      <description>API для встраивания внешнего html или lego кода на страницу сайта, на которой размещен embed.js Данные идут отсюда: https://meta.realweb.ru/page?p=4122&amp;amp;a=74
Для запуска применить
me(&#39;applyInjects&#39;);  </description>
    </item>
    
    <item>
      <title>Простейший отчет с фильтрами</title>
      <link>https://developers.devision.io/meta/samples/pages/report_with_filters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/samples/pages/report_with_filters/</guid>
      <description>Типичная задача META - вывод списка объектов в виде отчета с фильтрами.
Обычно отчет представляет из себя одну таблицу с фильтрами. Script id такой основной таблицы рекомендуется называть &amp;ldquo;res&amp;rdquo;, чтобы другим разработчикам было привычнее читать ваш код.
Код примера &amp;lt;!-- Фильтрация --&amp;gt; &amp;lt;script type=&amp;quot;meta/sql&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; label=&amp;quot;Организация&amp;quot; id=&amp;quot;org_ids&amp;quot; elem=&amp;quot;me-select&amp;quot; order=&amp;quot;1&amp;quot; span=&amp;quot;4&amp;quot; elem-attrs=&#39;{&amp;quot;multiple&amp;quot;:true}&#39; page-search&amp;gt; SELECT &amp;quot;organizationId&amp;quot; as id, name as name FROM &amp;quot;organization&amp;quot; order by name &amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;meta/sql&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; label=&amp;quot;Статус&amp;quot; id=&amp;quot;active_mode&amp;quot; elem=&amp;quot;me-select&amp;quot; default=&amp;quot;all&amp;quot; order=&amp;quot;1&amp;quot; span=&amp;quot;4&amp;quot; page-search&amp;gt; SELECT t.</description>
    </item>
    
    <item>
      <title>Список и редактирование сущности</title>
      <link>https://developers.devision.io/meta/samples/pages/simple_entity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/samples/pages/simple_entity/</guid>
      <description>Типичная задача META - вывод списка объектов и их редактирование
Регистрация Entity Чтобы начать работать с новой сущностью добавьте ее в репозиторий META AppContent. В списке полей обычно достаточно указать primary key и поле, которе будет считаться именем объекта сущности. Для примера попробуем зарегистрировать таблицу example_entity из БД с meta id &amp;ldquo;meta_samples&amp;rdquo;.
В репозитории AppContent в директории /entity/meta_samples создайте файл example_entity___public.example_entity.yaml.
Такое название файла надо читать так: {ENTITY_ID}___{DB_SCHEMA}.{DB_TABLE}.yaml Это именование позволяет быстро и легко искать файлы через IDE поиском по имени файла и пока что не влияет на парсер конфига, но будет влиять.</description>
    </item>
    
    <item>
      <title>Язык запросов META (METAQL)</title>
      <link>https://developers.devision.io/meta/guides/metaql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/metaql/</guid>
      <description>METAQL - Это защищенный SQL для запросов к данным меты. Основан на синтаксисах Oracle + PostgreSQL. Призван дать хороший и безопасный API к данным таблиц или views ваших БД.
Особенности  Поддерживаются только SELECT запросы Поддерживается только AND условия Нельзя называть поля или алясы зарезарвированными именами: date Нет прообразований типов JOIN пока не поддерживаются  Функции В METAQL разрешены не все функции, ниже представлен список доступных на текущий момент.</description>
    </item>
    
    <item>
      <title>Именование сущностей в БД</title>
      <link>https://developers.devision.io/meta/guides/db_naming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/db_naming/</guid>
      <description>При разработке новой БД предлагается придерживаться следующих правил. При этом, если у вас есть готовая БД, то вы не должны хотеть полностью переделать ее соглашения, так как это бесполезная работа. Просто продолжайте использовать то, что у вас есть.
 Все таблицы должны иметь несоставной первичный ключ, который должен называться id Все таблицы, представления, функции, триггерные функции и типы должны иметь комментарий Поля таблиц и view должны иметь комментарий. Исключения: поля с внешними ключами, общепонятные поля (первичный ключ, views, clicks, name, title и т.</description>
    </item>
    
    <item>
      <title>Тикеты</title>
      <link>https://developers.devision.io/meta/guides/ticket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/ticket/</guid>
      <description>Таблицы  issue: Непосредственно сами тикеты. Основная таблица issue_entity: Сущности, доступные для выбора &amp;ldquo;категории&amp;rdquo; тикета при создании. Тип объекта, в рамках которого делается тикет. Например тикет может быть по клиенту, медиаплану, сотруднику issue_field: Доп. поля, которые можно навешивать потом на типы тикетов issue_logwork: Трекинг времени по тикетам issue_msg: Комментарии к тикетам, приложенные файлы issue_priority: Справочник приоритетов тикетов issue_status: Справочник статусов тикетов issue_type: Справочник типов тикетов, Тут настраивается доступность типов тикетов для issue_entity, доступность основных или доп полей  Управляющие функции БД Пользовательские функции для изменения бизнес логики отмечены жирным шрифтом.</description>
    </item>
    
    <item>
      <title>meta/sql</title>
      <link>https://developers.devision.io/meta/guides/script_types/sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/script_types/sql/</guid>
      <description>Основной способ получения данных, рекомендуется вибирать именно его, а не meta/js в пробладающем кол-во вслучаев. Исполняется на указанной в db-alias базе данных Выполняет SQL с синтактисом указанной БД без магических модификаций
Существуют макросы для упрощения жизни разработчика:
${pager} - для вставки пагинатора
${sort} - для вставки сортировки
&amp;lt;script type=&amp;quot;meta/sql&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; id=&amp;quot;tableWithFooterWithoutPagerTotal&amp;quot; label=&amp;quot;Таблица с футером, но без расширенного пагинатора&amp;quot; span=&amp;quot;4&amp;quot; order=&amp;quot;71&amp;quot;&amp;gt; WITH empls AS ( SELECT (generate_series || employee.&amp;quot;employeeId&amp;quot;::text)::int as seq, employee.</description>
    </item>
    
    <item>
      <title>meta/js</title>
      <link>https://developers.devision.io/meta/guides/script_types/js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/script_types/js/</guid>
      <description>Стоит учесть Дизайн разработки в мете преполагает использование механизмов БД всегда, когда это можно.
Рекомендуется обрабатывать данные внутри БД, а не затаскивать в код приложения, чтобы, например почистить данные или не дай бог просуммировать. PostgreSQL очень хорошо справляется почти со всем задачами по обработке данных.
 Обрабатывается через Nashorn поэтому работает не всегда так же как обычный JavaScript
В скриптах выглядит следующим образом:
&amp;lt;script type=&amp;quot;meta/js&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; id=&amp;quot;tbl_with_js_footer&amp;quot; &amp;gt; function main() { return DataResult.</description>
    </item>
    
    <item>
      <title>header</title>
      <link>https://developers.devision.io/meta/_header/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.devision.io/meta/_header/</guid>
      <description>META</description>
    </item>
    
    <item>
      <title>CryptService</title>
      <link>https://developers.devision.io/meta/guides/java_api/cryptservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/cryptservice/</guid>
      <description>   Метод и описание Возвращаемый тип     checkJWTExpire ( decodedJWT: DecodedJWT) void   decode ( str: String) String   decodeJSONObj ( str: String, clazz: Class) Object   encode ( str: String) String   encode ( str: String, expiresAt: Date) String   encodeJSONObj ( obj: Object) String   encodeJSONObj ( obj: Object, validTime: String) String    </description>
    </item>
    
    <item>
      <title>DataDiffService</title>
      <link>https://developers.devision.io/meta/guides/java_api/datadiffservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/datadiffservice/</guid>
      <description>   Метод и описание Возвращаемый тип     diff ( a: DataResult, b: DataResult, config: ScriptObjectMirror) DataResult   diff ( oldV: DataResult, newV: DataResult, conf: DiffConfig) DataResult    </description>
    </item>
    
    <item>
      <title>DataTransformService</title>
      <link>https://developers.devision.io/meta/guides/java_api/datatransformservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/datatransformservice/</guid>
      <description>   Метод и описание Возвращаемый тип     pivot ( in: DataResult, conf: PivotConfig) DataResult   pivot ( in: DataResult, conf: ScriptObjectMirror) DataResult   sum ( o1: Object, o2: Object) Object    </description>
    </item>
    
    <item>
      <title>HtmlService</title>
      <link>https://developers.devision.io/meta/guides/java_api/htmlservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/htmlservice/</guid>
      <description>   Метод и описание Возвращаемый тип     html2text ( html: String) String    </description>
    </item>
    
    <item>
      <title>LegoToMarkdownService</title>
      <link>https://developers.devision.io/meta/guides/java_api/legotomarkdownservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/legotomarkdownservice/</guid>
      <description>   Метод и описание Возвращаемый тип     init ( ) void   toMarkdown ( legoForm: Object, formData: Object) String    </description>
    </item>
    
    <item>
      <title>LinkBuildService</title>
      <link>https://developers.devision.io/meta/guides/java_api/linkbuildservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/linkbuildservice/</guid>
      <description>   Метод и описание Возвращаемый тип     build ( href: String, content: String) String   getFullUrl ( entityId: String, objectId: String, pageId: String) String   getHtmlLink ( content: String, entityId: String, objectId: String) String   getHtmlLink ( content: String, entityId: String, objectId: String, pageId: String) String   getPageFullUrl ( pageId: String, sp: Map) String    </description>
    </item>
    
    <item>
      <title>MarkdownService</title>
      <link>https://developers.devision.io/meta/guides/java_api/markdownservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/markdownservice/</guid>
      <description>   Метод и описание Возвращаемый тип     render ( markdownText: Object) String   render ( markdownText: Object, siteUrl: String) String   render ( markdownText: String) String   render ( markdownText: String, siteUrl: String) String    </description>
    </item>
    
    <item>
      <title>MediaService</title>
      <link>https://developers.devision.io/meta/guides/java_api/mediaservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/mediaservice/</guid>
      <description>   Метод и описание Возвращаемый тип     get ( env: Env, mediaId: String) MediaFile   getDownloadUrlPart ( id: String) String   getFilesBase64ZipArchive ( files: List) String   getViewUrlPart ( id: String) String   persist ( env: Env, fileBase64Content: String, filename: String, extension: String, mime: String, isPrivate: boolean) MediaFile   persist ( env: Env, fileBase64Content: String, filename: String, extension: String, mime: String, isPrivate: boolean, origin: String) MediaFile   prepareFileName ( env: Env, filename: String) String   sendFileToResponse ( response: HttpServletResponse, media: MediaFile, fname: String, removeAfterSend: boolean, addHeadersForDownload: boolean) void   sendHeaders ( response: HttpServletResponse, contentType: String, fname: String, addHeadersForDownload: boolean) void   upsert ( req: UpsertRequest) MediaFile    </description>
    </item>
    
    <item>
      <title>MetaDatabaseService</title>
      <link>https://developers.devision.io/meta/guides/java_api/metadatabaseservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/metadatabaseservice/</guid>
      <description>   Метод и описание Возвращаемый тип     createMetaDataSourceInstance ( db: CDatabase) MetaDataSource   eraseDBPool ( ) void   getDatabaseType ( dbAlias: String) DatabaseType   getMDSource ( dbAlias: String) MetaDataSource   getMetaDS ( ) JdbcMetaDataSource   getMetaJdbcTemplate ( ) JdbcTemplate   getRedis ( ) RedissonClient    </description>
    </item>
    
    <item>
      <title>ObjectLogService</title>
      <link>https://developers.devision.io/meta/guides/java_api/objectlogservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/objectlogservice/</guid>
      <description>   Метод и описание Возвращаемый тип     buildLog ( ) Log   coreErrorEventTrack ( action: String, label: String, value: Long) void   coreEventTrack ( action: String, label: String) void   coreEventTrack ( action: String, label: String, value: Long) void   log ( entityId: String, objectId: Object, code: Code) void   log ( entityId: String, objectId: Object, code: String) void   log ( objectLog: Log) void   logValue ( entityId: String, objectId: Object, code: Code, value: Object) void   logValue ( entityId: String, objectId: Object, code: Code, value: Object, form: String) void   logValue ( entityId: String, objectId: Object, code: String, value: Object) void   logValue ( entityId: String, objectId: Object, code: String, value: Object, form: String) void    </description>
    </item>
    
    <item>
      <title>TableColumnService</title>
      <link>https://developers.devision.io/meta/guides/java_api/tablecolumnservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/tablecolumnservice/</guid>
      <description>   Метод и описание Возвращаемый тип     buildFn ( aggFn: AggFn, expr: String) String   escapeDivisionByZero ( text: String, escapePrefix: String, escapePostfix: String) String   extractTableParams ( columns: DataResult, dimensions: List, metrics: List) TableSettings   getMetricsFromExpr ( in: String) Set    </description>
    </item>
    
    <item>
      <title>UserRecoveryService</title>
      <link>https://developers.devision.io/meta/guides/java_api/userrecoveryservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/java_api/userrecoveryservice/</guid>
      <description>   Метод и описание Возвращаемый тип     getDoublePasswordHash ( login: String) String   sendNotice ( login: String, appAlias: String, state: String) SendNoticeResponse    </description>
    </item>
    
    <item>
      <title>Элемент me-chart</title>
      <link>https://developers.devision.io/meta/ui_controls/me-chart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/ui_controls/me-chart/</guid>
      <description>Основной и единственный элемент для вывода графиков Работает на Google Charts
@example https://apps.devision.io/page?p=3623&amp;amp;a=35
@link https://developers.google.com/chart/interactive/docs/gallery
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;curved&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;dualY&amp;quot;: &amp;quot;(true)&amp;quot;, &amp;quot;hAxisMinValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;height&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;nativeOptions&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;pieHole&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;sliceVisibilityThreshold&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;stacked&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;stretched&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;vAxisMinValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;vAxisTextPosition&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;zoomButton&amp;quot;: &amp;quot;( none | left )&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-chart&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-input</title>
      <link>https://developers.devision.io/meta/ui_controls/me-input/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/ui_controls/me-input/</guid>
      <description>Основной элемент для ввода данных Использует attrs.type для уточнения внешнего вида элемента. Может принимать вид текстового поля ввода, выпадающего списка, checkbox, radio и пр.
@returns any - тип результируещего значения зависит от [[IMeInputAttrs.type]] элемента и от значения multiple
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;addObjectButton&amp;quot;: { &amp;quot;cssClass&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;disabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, lg )&amp;quot;, &amp;quot;modalTitle&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;[ modal]&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; } }, &amp;quot;align&amp;quot;: &amp;quot;( left | right )&amp;quot;, &amp;quot;contextualClass&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;create&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;ctrlEnterApply&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;disabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;enterSubmit&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;fastViewObjectButton&amp;quot;: { &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, lg )&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(number)&amp;quot; }, &amp;quot;formInputName&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;groupAddon&amp;quot;: { &amp;quot;text&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;inlineElements&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;inlineLabel&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;max&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;maxHeight&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;min&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;( JSON | JSON_OBJECT | HTML | SQL )&amp;quot;, &amp;quot;multiple&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;native&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;options&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon_image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;link&amp;quot;: { &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, lg, normal, max )&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(object)&amp;quot; }, &amp;quot;mentio&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;items&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;triggerChar&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: { &amp;quot;unit&amp;quot;: { &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(any)&amp;quot; } } ], &amp;quot;pattern&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;placeholder&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;readonly&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;required&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;rows&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;scaleByContent&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;step&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;timePicker&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;type&amp;quot;: &amp;quot;( text | select | duallist | submit | textarea | checkbox | radio | me-link-radio | me-summary-btn | me-tabs | filecontent | url | tel | email | percent )&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;verticalColumns&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;viewSize&amp;quot;: &amp;quot;( xs | sm | lg )&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-input&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-lego</title>
      <link>https://developers.devision.io/meta/ui_controls/me-lego/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/ui_controls/me-lego/</guid>
      <description>Основной элемент-контейнер для рендеринга элементов. Рендерится в me-page как основной контейнер, а так же может быть использован внутри себя и себе подобных контейнеров: me-lego, me-lego-list, me-wizard
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;background&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;collapsable&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;defaultBlockEnabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;formHorizontal&amp;quot;: { &amp;quot;elemLabelGridSize&amp;quot;: &amp;quot;(number)&amp;quot; }, &amp;quot;logo&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;openContent&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;optional&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;style&amp;quot;: &amp;quot;( default | card )&amp;quot;, &amp;quot;viewSize&amp;quot;: &amp;quot;( sm )&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;elems&amp;quot;: [ { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-lego&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-lego-list</title>
      <link>https://developers.devision.io/meta/ui_controls/me-lego-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/ui_controls/me-lego-list/</guid>
      <description>Основной элемент-контейнер для рендеринга элементов. Рендерится в me-page как основной контейнер, а так же может быть использован внутри себя и себе подобных контейнеров: me-lego, me-lego-list, me-wizard
@example https://apps.devision.io/page?p=3723&amp;amp;a=35
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;markDelete&amp;quot;: &amp;quot;(boolean)&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;elems&amp;quot;: [ { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-lego-list&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-pivot</title>
      <link>https://developers.devision.io/meta/ui_controls/me-pivot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/ui_controls/me-pivot/</guid>
      <description>Сводная таблица (Pivot Table) на JS Загружает все даныые для себя на клиента и крутит и считает все на JavaScript Не рекомендуется вгружать в контрол более 10 000 строк Используется в инструменте &amp;ldquo;Анализ данных&amp;rdquo; для [[IMeTable]]
@link https://pivottable.js.org
@example https://apps.devision.io/page?p=4230&amp;amp;a=35
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;datatype&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;native&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;skipColGrandTotals&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;skipRowGrandTotals&amp;quot;: &amp;quot;(boolean)&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-pivot&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-submit</title>
      <link>https://developers.devision.io/meta/ui_controls/me-submit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/ui_controls/me-submit/</guid>
      <description>Использует все от [[IMeInput]] и просто рефрешит форму при нажатии
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;addObjectButton&amp;quot;: { &amp;quot;cssClass&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;disabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, lg )&amp;quot;, &amp;quot;modalTitle&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;[ modal]&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; } }, &amp;quot;align&amp;quot;: &amp;quot;( left | right )&amp;quot;, &amp;quot;contextualClass&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;create&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;ctrlEnterApply&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;disabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;enterSubmit&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;fastViewObjectButton&amp;quot;: { &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, lg )&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(number)&amp;quot; }, &amp;quot;formInputName&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;groupAddon&amp;quot;: { &amp;quot;text&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;inlineElements&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;inlineLabel&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;max&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;maxHeight&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;min&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;( JSON | JSON_OBJECT | HTML | SQL )&amp;quot;, &amp;quot;multiple&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;native&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;options&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon_image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;image&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;link&amp;quot;: { &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, lg, normal, max )&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(object)&amp;quot; }, &amp;quot;mentio&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;items&amp;quot;: [ { &amp;quot;date&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;triggerChar&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;section&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: { &amp;quot;unit&amp;quot;: { &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(any)&amp;quot; } } ], &amp;quot;pattern&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;placeholder&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;readonly&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;required&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;rows&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;scaleByContent&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;step&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;timePicker&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;type&amp;quot;: &amp;quot;( text | select | duallist | submit | textarea | checkbox | radio | me-link-radio | me-summary-btn | me-tabs | filecontent | url | tel | email | percent )&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;verticalColumns&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;viewSize&amp;quot;: &amp;quot;( xs | sm | lg )&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-submit&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-table</title>
      <link>https://developers.devision.io/meta/ui_controls/me-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/ui_controls/me-table/</guid>
      <description>Основной и единственный элемент для вывода таблиц и редактируемых таблиц
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;analyzable&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;addObjectButton&amp;quot;: { &amp;quot;cssClass&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;disabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;state&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;modalSize&amp;quot;: &amp;quot;( xs, sm, lg )&amp;quot;, &amp;quot;modalTitle&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;[ modal]&amp;quot;, &amp;quot;pageId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; } }, &amp;quot;childEntityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;exportOptions&amp;quot;: { &amp;quot;dialog&amp;quot;: &amp;quot;(boolean)&amp;quot; }, &amp;quot;goalSeek&amp;quot;: { &amp;quot;defaultVariantId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;variantsRefPvmData&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;hiddenColumns&amp;quot;: { &amp;quot;allowedGroupIds&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;columns&amp;quot;: [ &amp;quot;(string)&amp;quot; ] }, &amp;quot;options&amp;quot;: { &amp;quot;entityCardLink&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;header&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;nowrapData&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;pinHeader&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;rowHeaders&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;rowsCounter&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;tableCssClass&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;search&amp;quot;: { &amp;quot;placeholder&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; } }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;exportable&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;filterable&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-table&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-tabs</title>
      <link>https://developers.devision.io/meta/ui_controls/me-tabs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/ui_controls/me-tabs/</guid>
      <description>Элементы табсета ( [[IMeTabs.elems]] ) и есть набор табов
@example https://apps.devision.io/page?p=3708&amp;amp;a=35
@example https://apps.devision.io/page?p=4283&amp;amp;a=35
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;attrs&amp;quot;: { &amp;quot;removable&amp;quot;: &amp;quot;(boolean)&amp;quot; }, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;elems&amp;quot;: [ { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-tabs&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
    <item>
      <title>Элемент me-wizard</title>
      <link>https://developers.devision.io/meta/ui_controls/me-wizard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/ui_controls/me-wizard/</guid>
      <description>Элементы визарда ( [[IMeWizard.elems]] ) и есть набор шагов
@example https://apps.devision.io/page?p=3570&amp;amp;a=35
Структура { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;elems&amp;quot;: [ { &amp;quot;__tid&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;align&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;bindAttrs&amp;quot;: [ { &amp;quot;source&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;depends&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; } ], &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;errors&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;(string)&amp;quot; } ], &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;listen&amp;quot;: [ { &amp;quot;$promise&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;code&amp;quot;: [ &amp;quot;( ADD | SET, REMOVE )&amp;quot; ], &amp;quot;entityId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;objectId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;pubSubChannel&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;refreshRefPvmData&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;reload&amp;quot;: &amp;quot;(any)&amp;quot; } ], &amp;quot;name&amp;quot;: &amp;quot;me-wizard&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;order&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;refPvmData&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;refPvmValidator&amp;quot;: { &amp;quot;additionalPartialLoad&amp;quot;: [ &amp;quot;(string)&amp;quot; ], &amp;quot;dataId&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;tooltip&amp;quot;: { &amp;quot;content&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot; }, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;visible&amp;quot;: &amp;quot;(boolean)&amp;quot; }  __tid (any) Автоматически генерируемое приватное поле align (string) Позиционирование элемента в ячейке серки **@default** &#34;</description>
    </item>
    
  </channel>
</rss>