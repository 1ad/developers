<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>META</title>
    <link>https://developers.1ad.ru/meta/</link>
    <description>Recent content on META</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Mon, 24 Apr 2017 18:36:24 +0200</lastBuildDate>
    
	<atom:link href="https://developers.1ad.ru/meta/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Аналитика</title>
      <link>https://developers.1ad.ru/meta/embedjs/analytics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/embedjs/analytics/</guid>
      <description>Мета предоставляет сервис отслеживания событий наподобие Google Analytics.
ВАЖНО! В отличие от простого embed.js встраивания iframe и других мета страниц. Трекер пока что имеет зависимость от Jquery. Поэтому jquery на момент инициализации трекера уже должен быть загружен
 Подключается код через embed.js скрипт, выглядит это следующим образом:
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; // Требует Jquery в момент загрузки (function (i,s,o,g,r,a,m) { i[&#39;MetaEmbedObject&#39;]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)}, i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,&#39;script&#39;,&#39;//embed.garpun.com/static/embed.js&#39;,&#39;me&#39;); // Инициализируйте свой трекер me(&#39;initTracker&#39;, &#39;YOUR_TRACKER_NAME&#39;); &amp;lt;/script&amp;gt;  Отслеживание страниц - pageview Имеет идентичный GA api - https://developers.</description>
    </item>
    
    <item>
      <title>Inject API</title>
      <link>https://developers.1ad.ru/meta/embedjs/inject_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/embedjs/inject_api/</guid>
      <description>API для встраивания внешнего html или lego кода на страницу сайта, на которой размещен embed.js Данные идут отсюда: https://meta.realweb.ru/page?p=4122&amp;amp;a=74
Для запуска применить
me(&#39;applyInjects&#39;);  </description>
    </item>
    
    <item>
      <title>header</title>
      <link>https://developers.1ad.ru/meta/_header/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.1ad.ru/meta/_header/</guid>
      <description>META</description>
    </item>
    
    <item>
      <title>Быстрый старт</title>
      <link>https://developers.1ad.ru/meta/guides/quick_start/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.1ad.ru/meta/guides/quick_start/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Окружение запроса</title>
      <link>https://developers.1ad.ru/meta/guides/request_response_vars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/guides/request_response_vars/</guid>
      <description>Введение  env - объект-окружение запроса к серверу. vm - объект для удобной работы с ответом клиенту. На лего странцах отдельный vm на каждый script. pvm - только на LEGO-страницах. Отвечает за хранение данных на всех странце, содержит в себе vm script. DataResult - низкоуровневый класс, отвечающий за ответ с данными по EntityPage. Его нельзя получить так как он никуда не передается, существует вне scipt - над ним. Создается вручную при необходимости только в meta/js скриптах.</description>
    </item>
    
    <item>
      <title>Шаблонизация</title>
      <link>https://developers.1ad.ru/meta/guides/template_engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/guides/template_engines/</guid>
      <description>Для шаблонизации используется freemarker.org. Отсутствие переменных при шаблонизации сейчас не является фатальной ошибкой, переменная в такой случае будет заменяться пустой строкой.
Функции Пример вызова:
 ${t(String)} - Перевод ${to_json(Object)} - Конвертация объекта в json ${sfile(String)} - Получение абсолютной ссылки на статический файл со стораджа ${to_date(String)} - Приведение к дате ${pg_quote_literal(String)} - Экранирование строки для PostgreSQL ${pg_quote_ident(String)} - Экранирование идентификатора (имя столбца, таблицы, схемы) для PostgreSQL  Работа с таблицами ${pager} Добавляет limit/offset в запрос и пагинатор на страницу</description>
    </item>
    
  </channel>
</rss>