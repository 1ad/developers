<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>META on META | AdPlatform Developers</title>
    <link>https://developers.1ad.ru/meta/</link>
    <description>Recent content in META on META | AdPlatform Developers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Mon, 24 Apr 2017 18:36:24 +0200</lastBuildDate>
    
	<atom:link href="https://developers.1ad.ru/meta/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Быстрый старт</title>
      <link>https://developers.1ad.ru/meta/guides/quick_start/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.1ad.ru/meta/guides/quick_start/</guid>
      <description>Для успешного начала работы вам стоит ознакомится с документацией из этого списка:
 Типы скриптов Шаблонизация Окружение запроса Зайти в МЕТА Примеры  </description>
    </item>
    
    <item>
      <title>Окружение запроса</title>
      <link>https://developers.1ad.ru/meta/guides/request_response_vars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/guides/request_response_vars/</guid>
      <description>Введение  env - объект-окружение запроса к серверу. vm - объект для удобной работы с ответом клиенту. На лего странцах отдельный vm на каждый script. pvm - только на LEGO-страницах. Отвечает за хранение данных на всех странце, содержит в себе vm script. DataResult - низкоуровневый класс, отвечающий за ответ с данными по EntityPage. Его нельзя получить так как он никуда не передается, существует вне scipt - над ним. Создается вручную при необходимости только в meta/js скриптах.</description>
    </item>
    
    <item>
      <title>Шаблонизация</title>
      <link>https://developers.1ad.ru/meta/guides/template_engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/guides/template_engines/</guid>
      <description>Для шаблонизации используется freemarker.org. Отсутствие переменных при шаблонизации сейчас не является фатальной ошибкой, переменная в такой случае будет заменяться пустой строкой.
Функции Пример вызова:
 ${t(String)} - Перевод ${to_json(Object)} - Конвертация объекта в json ${sfile(String)} - Получение абсолютной ссылки на статический файл со стораджа ${to_date(String)} - Приведение к дате ${pg_quote_literal(String)} - Экранирование строки для PostgreSQL ${pg_quote_ident(String)} - Экранирование идентификатора (имя столбца, таблицы, схемы) для PostgreSQL  Работа с таблицами ${pager} Добавляет limit/offset в запрос и пагинатор на страницу</description>
    </item>
    
    <item>
      <title>Графики</title>
      <link>https://developers.1ad.ru/meta/guides/charts/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.1ad.ru/meta/guides/charts/</guid>
      <description>Являются элементами me-chart. Работают на основе google charts. Примеры тут: http://meta.realweb.ru/page?a=35&amp;amp;p=3623
Имеют опцию &amp;ldquo;nativeOptions&amp;rdquo; для передачи нативных параметров. Не рекомендуется это использоваться просто так из-за невозможности поддержки возможности смены графиков или более легкого обновления версии при отсутствии обратной совместимости.
nativeOptions можно использовать как вариант для тестирования и с последующим запросом впиливания опции как мета параметр графиков.</description>
    </item>
    
    <item>
      <title>Аналитика</title>
      <link>https://developers.1ad.ru/meta/embed_api/analytics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/embed_api/analytics/</guid>
      <description>Мета предоставляет сервис отслеживания событий наподобие Google Analytics.
ВАЖНО! В отличие от простого embed.js встраивания iframe и других мета страниц. Трекер пока что имеет зависимость от Jquery. Поэтому jquery на момент инициализации трекера уже должен быть загружен
 Подключается код через embed.js скрипт, выглядит это следующим образом:
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; // Требует Jquery в момент загрузки (function (i,s,o,g,r,a,m) { i[&#39;MetaEmbedObject&#39;]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)}, i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,&#39;script&#39;,&#39;//embed.garpun.com/static/embed.js&#39;,&#39;me&#39;); // Инициализируйте свой трекер me(&#39;initTracker&#39;, &#39;YOUR_TRACKER_NAME&#39;); &amp;lt;/script&amp;gt;  Отслеживание страниц - pageview Имеет идентичный GA api - https://developers.</description>
    </item>
    
    <item>
      <title>Inject API</title>
      <link>https://developers.1ad.ru/meta/embed_api/inject_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/embed_api/inject_api/</guid>
      <description>API для встраивания внешнего html или lego кода на страницу сайта, на которой размещен embed.js Данные идут отсюда: https://meta.realweb.ru/page?p=4122&amp;amp;a=74
Для запуска применить
me(&#39;applyInjects&#39;);  </description>
    </item>
    
    <item>
      <title>Именование сущностей в БД</title>
      <link>https://developers.1ad.ru/meta/guides/db_naming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/guides/db_naming/</guid>
      <description>При разработке новой БД предлагается придерживаться следующих правил. При этом, если у вас есть готовая БД, то вы не должны хотеть полностью переделать ее соглашения, так как это бесполезная работа. Просто продолжайте использовать то, что у вас есть.
 Все таблицы должны иметь несоставной первичный ключ, который должен называться id Все таблицы, представления, функции, триггерные функции и типы должны иметь комментарий Поля таблиц и view должны иметь комментарий. Исключения: поля с внешними ключами, общепонятные поля (первичный ключ, views, clicks, name, title и т.</description>
    </item>
    
    <item>
      <title>meta/sql</title>
      <link>https://developers.1ad.ru/meta/guides/script_types/sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/guides/script_types/sql/</guid>
      <description>Основной способ получения данных, рекомендуется вибирать именно его, а не meta/js в пробладающем кол-во вслучаев. Исполняется на указанной в db-alias базе данных Выполняет SQL с синтактисом указанной БД без магических модификаций
Существуют макросы для упрощения жизни разработчика:
${pager} - для вставки пагинатора
${sort} - для вставки сортировки
&amp;lt;script type=&amp;quot;meta/sql&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; id=&amp;quot;tableWithFooterWithoutPagerTotal&amp;quot; label=&amp;quot;Таблица с футером, но без расширенного пагинатора&amp;quot; span=&amp;quot;4&amp;quot; order=&amp;quot;71&amp;quot;&amp;gt; WITH empls AS ( SELECT (generate_series || employee.&amp;quot;employeeId&amp;quot;::text)::int as seq, employee.</description>
    </item>
    
    <item>
      <title>meta/js</title>
      <link>https://developers.1ad.ru/meta/guides/script_types/js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/guides/script_types/js/</guid>
      <description>Стоит учесть Дизайн разработки в мете преполагает использование механизмов БД всегда, когда это можно.
Рекомендуется обрабатывать данные внутри БД, а не затаскивать в код приложения, чтобы, например почистить данные или не дай бог просуммировать. PostgreSQL очень хорошо справляется почти со всем задачами по обработке данных.
 Обрабатывается через Nashorn поэтому работает не всегда так же как обычный JavaScript
В скриптах выглядит следующим образом:
&amp;lt;script type=&amp;quot;meta/js&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; id=&amp;quot;tbl_with_js_footer&amp;quot; &amp;gt; function main() { return DataResult.</description>
    </item>
    
    <item>
      <title>header</title>
      <link>https://developers.1ad.ru/meta/_header/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>https://developers.1ad.ru/meta/_header/</guid>
      <description>META</description>
    </item>
    
    <item>
      <title>me-lego</title>
      <link>https://developers.1ad.ru/meta/ui_controls/me-lego/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.1ad.ru/meta/ui_controls/me-lego/</guid>
      <description>Основной элемент-контейнер для рендеринга элементов. Рендерится в me-page как основной контейнер, а так же может быть использован внутри себя и себе подобных контейнеров: me-lego, me-lego-list, me-wizard
Структура { &amp;quot;attrs&amp;quot;: { &amp;quot;background&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;collapsable&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;defaultBlockEnabled&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;logo&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;openContent&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;optional&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;viewSize&amp;quot;: &amp;quot;( sm )&amp;quot; }, &amp;quot;defaultValue&amp;quot;: &amp;quot;(any)&amp;quot;, &amp;quot;entityId&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;formHorizontal&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;help&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;icon&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;label&amp;quot;: &amp;quot;(string)&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;me-lego&amp;quot;, &amp;quot;offset&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;selfDepends&amp;quot;: &amp;quot;(boolean)&amp;quot;, &amp;quot;span&amp;quot;: &amp;quot;(number)&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;(string)&amp;quot; }  attrs [object Object] defaultValue (any) Значение элемента по умолчанию Для некоторых элементов</description>
    </item>
    
  </channel>
</rss>