<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Типы скриптов on META | Devision Developers</title>
    <link>https://developers.devision.io/meta/guides/script_types/</link>
    <description>Recent content in Типы скриптов on META | Devision Developers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    
	<atom:link href="https://developers.devision.io/meta/guides/script_types/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>meta/sql</title>
      <link>https://developers.devision.io/meta/guides/script_types/sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/script_types/sql/</guid>
      <description>Основной способ получения данных, рекомендуется вибирать именно его, а не meta/js в пробладающем кол-во вслучаев. Исполняется на указанной в db-alias базе данных Выполняет SQL с синтактисом указанной БД без магических модификаций
Существуют макросы для упрощения жизни разработчика:
${pager} - для вставки пагинатора
${sort} - для вставки сортировки
&amp;lt;script type=&amp;quot;meta/sql&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; id=&amp;quot;tableWithFooterWithoutPagerTotal&amp;quot; label=&amp;quot;Таблица с футером, но без расширенного пагинатора&amp;quot; span=&amp;quot;4&amp;quot; order=&amp;quot;71&amp;quot;&amp;gt; WITH empls AS ( SELECT (generate_series || employee.&amp;quot;employeeId&amp;quot;::text)::int as seq, employee.</description>
    </item>
    
    <item>
      <title>meta/js</title>
      <link>https://developers.devision.io/meta/guides/script_types/js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://developers.devision.io/meta/guides/script_types/js/</guid>
      <description>Стоит учесть Дизайн разработки в мете преполагает использование механизмов БД всегда, когда это можно.
Рекомендуется обрабатывать данные внутри БД, а не затаскивать в код приложения, чтобы, например почистить данные или не дай бог просуммировать. PostgreSQL очень хорошо справляется почти со всем задачами по обработке данных.
 Обрабатывается через Nashorn поэтому работает не всегда так же как обычный JavaScript
В скриптах выглядит следующим образом:
&amp;lt;script type=&amp;quot;meta/js&amp;quot; db-alias=&amp;quot;meta_samples&amp;quot; id=&amp;quot;tbl_with_js_footer&amp;quot; &amp;gt; function main() { return DataResult.</description>
    </item>
    
  </channel>
</rss>